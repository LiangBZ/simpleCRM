<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.noomn.dao.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.com.noomn.dao.Employee">
    <id column="EMPLOYEE_ID" jdbcType="VARCHAR" property="employeeId" />
    <result column="DEPARTMENT_ID" jdbcType="VARCHAR" property="departmentId" />
    <result column="USERROLE_ID" jdbcType="VARCHAR" property="userroleId" />
    <result column="NEXT_DEP_DEPARTMENT_ID" jdbcType="VARCHAR" property="nextDepDepartmentId" />
    <result column="EMPLOYEE_NUMBER" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="EMPLOYEE_NAME" jdbcType="VARCHAR" property="employeeName" />
    <result column="EMPLOYEE_SEX" jdbcType="CHAR" property="employeeSex" />
    <result column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
    <result column="EMPLOYEE_PHONE" jdbcType="VARCHAR" property="employeePhone" />
    <result column="EMPLOYEE_ADDRESS" jdbcType="VARCHAR" property="employeeAddress" />
    <result column="EMPLOYEE_BIRTHDAY" jdbcType="TIMESTAMP" property="employeeBirthday" />
    <result column="EMPLOYEE_IDNUMBER" jdbcType="VARCHAR" property="employeeIdnumber" />
    <result column="EMPLOYEE_ENTRYDATE" jdbcType="TIMESTAMP" property="employeeEntrydate" />
    <result column="EMPLOYEE_STATE" jdbcType="CHAR" property="employeeState" />
    <result column="EMPLOYEE_PASSWORD" jdbcType="VARCHAR" property="employeePassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, 
    EMPLOYEE_NAME, EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, 
    EMPLOYEE_IDNUMBER, EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
  </sql>
  <select id="selectByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.noomn.dao.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.noomn.dao.Employee">
    insert into employee (EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, 
      NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, EMPLOYEE_NAME, 
      EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, 
      EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, EMPLOYEE_IDNUMBER, 
      EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
      )
    values (#{employeeId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{userroleId,jdbcType=VARCHAR}, 
      #{nextDepDepartmentId,jdbcType=VARCHAR}, #{employeeNumber,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR}, 
      #{employeeSex,jdbcType=CHAR}, #{employeeEmail,jdbcType=VARCHAR}, #{employeePhone,jdbcType=VARCHAR}, 
      #{employeeAddress,jdbcType=VARCHAR}, #{employeeBirthday,jdbcType=TIMESTAMP}, #{employeeIdnumber,jdbcType=VARCHAR}, 
      #{employeeEntrydate,jdbcType=TIMESTAMP}, #{employeeState,jdbcType=CHAR}, #{employeePassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.noomn.dao.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="departmentId != null">
        DEPARTMENT_ID,
      </if>
      <if test="userroleId != null">
        USERROLE_ID,
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID,
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER,
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME,
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX,
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL,
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE,
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS,
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY,
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER,
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE,
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE,
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        #{employeePassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.employeeId != null">
        EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.userroleId != null">
        USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      </if>
      <if test="record.nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null">
        EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null">
        EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeSex != null">
        EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      </if>
      <if test="record.employeeEmail != null">
        EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null">
        EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeAddress != null">
        EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeState != null">
        EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      </if>
      <if test="record.employeePassword != null">
        EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.noomn.dao.Employee">
    update employee
    <set>
      <if test="departmentId != null">
        DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.noomn.dao.Employee">
    update employee
    set DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR}
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.com.noomn.dao.Employee">
    <id column="EMPLOYEE_ID" jdbcType="VARCHAR" property="employeeId" />
    <result column="DEPARTMENT_ID" jdbcType="VARCHAR" property="departmentId" />
    <result column="USERROLE_ID" jdbcType="VARCHAR" property="userroleId" />
    <result column="NEXT_DEP_DEPARTMENT_ID" jdbcType="VARCHAR" property="nextDepDepartmentId" />
    <result column="EMPLOYEE_NUMBER" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="EMPLOYEE_NAME" jdbcType="VARCHAR" property="employeeName" />
    <result column="EMPLOYEE_SEX" jdbcType="CHAR" property="employeeSex" />
    <result column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
    <result column="EMPLOYEE_PHONE" jdbcType="VARCHAR" property="employeePhone" />
    <result column="EMPLOYEE_ADDRESS" jdbcType="VARCHAR" property="employeeAddress" />
    <result column="EMPLOYEE_BIRTHDAY" jdbcType="TIMESTAMP" property="employeeBirthday" />
    <result column="EMPLOYEE_IDNUMBER" jdbcType="VARCHAR" property="employeeIdnumber" />
    <result column="EMPLOYEE_ENTRYDATE" jdbcType="TIMESTAMP" property="employeeEntrydate" />
    <result column="EMPLOYEE_STATE" jdbcType="CHAR" property="employeeState" />
    <result column="EMPLOYEE_PASSWORD" jdbcType="VARCHAR" property="employeePassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, 
    EMPLOYEE_NAME, EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, 
    EMPLOYEE_IDNUMBER, EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
  </sql>
  <select id="selectByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.noomn.dao.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.noomn.dao.Employee">
    insert into employee (EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, 
      NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, EMPLOYEE_NAME, 
      EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, 
      EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, EMPLOYEE_IDNUMBER, 
      EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
      )
    values (#{employeeId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{userroleId,jdbcType=VARCHAR}, 
      #{nextDepDepartmentId,jdbcType=VARCHAR}, #{employeeNumber,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR}, 
      #{employeeSex,jdbcType=CHAR}, #{employeeEmail,jdbcType=VARCHAR}, #{employeePhone,jdbcType=VARCHAR}, 
      #{employeeAddress,jdbcType=VARCHAR}, #{employeeBirthday,jdbcType=TIMESTAMP}, #{employeeIdnumber,jdbcType=VARCHAR}, 
      #{employeeEntrydate,jdbcType=TIMESTAMP}, #{employeeState,jdbcType=CHAR}, #{employeePassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.noomn.dao.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="departmentId != null">
        DEPARTMENT_ID,
      </if>
      <if test="userroleId != null">
        USERROLE_ID,
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID,
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER,
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME,
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX,
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL,
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE,
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS,
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY,
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER,
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE,
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE,
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        #{employeePassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.employeeId != null">
        EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.userroleId != null">
        USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      </if>
      <if test="record.nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null">
        EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null">
        EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeSex != null">
        EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      </if>
      <if test="record.employeeEmail != null">
        EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null">
        EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeAddress != null">
        EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeState != null">
        EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      </if>
      <if test="record.employeePassword != null">
        EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.noomn.dao.Employee">
    update employee
    <set>
      <if test="departmentId != null">
        DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.noomn.dao.Employee">
    update employee
    set DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR}
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.com.noomn.dao.Employee">
    <id column="EMPLOYEE_ID" jdbcType="VARCHAR" property="employeeId" />
    <result column="DEPARTMENT_ID" jdbcType="VARCHAR" property="departmentId" />
    <result column="USERROLE_ID" jdbcType="VARCHAR" property="userroleId" />
    <result column="NEXT_DEP_DEPARTMENT_ID" jdbcType="VARCHAR" property="nextDepDepartmentId" />
    <result column="EMPLOYEE_NUMBER" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="EMPLOYEE_NAME" jdbcType="VARCHAR" property="employeeName" />
    <result column="EMPLOYEE_SEX" jdbcType="CHAR" property="employeeSex" />
    <result column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
    <result column="EMPLOYEE_PHONE" jdbcType="VARCHAR" property="employeePhone" />
    <result column="EMPLOYEE_ADDRESS" jdbcType="VARCHAR" property="employeeAddress" />
    <result column="EMPLOYEE_BIRTHDAY" jdbcType="TIMESTAMP" property="employeeBirthday" />
    <result column="EMPLOYEE_IDNUMBER" jdbcType="VARCHAR" property="employeeIdnumber" />
    <result column="EMPLOYEE_ENTRYDATE" jdbcType="TIMESTAMP" property="employeeEntrydate" />
    <result column="EMPLOYEE_STATE" jdbcType="CHAR" property="employeeState" />
    <result column="EMPLOYEE_PASSWORD" jdbcType="VARCHAR" property="employeePassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, 
    EMPLOYEE_NAME, EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, 
    EMPLOYEE_IDNUMBER, EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
  </sql>
  <select id="selectByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.noomn.dao.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.noomn.dao.Employee">
    insert into employee (EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, 
      NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, EMPLOYEE_NAME, 
      EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, 
      EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, EMPLOYEE_IDNUMBER, 
      EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
      )
    values (#{employeeId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{userroleId,jdbcType=VARCHAR}, 
      #{nextDepDepartmentId,jdbcType=VARCHAR}, #{employeeNumber,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR}, 
      #{employeeSex,jdbcType=CHAR}, #{employeeEmail,jdbcType=VARCHAR}, #{employeePhone,jdbcType=VARCHAR}, 
      #{employeeAddress,jdbcType=VARCHAR}, #{employeeBirthday,jdbcType=TIMESTAMP}, #{employeeIdnumber,jdbcType=VARCHAR}, 
      #{employeeEntrydate,jdbcType=TIMESTAMP}, #{employeeState,jdbcType=CHAR}, #{employeePassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.noomn.dao.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="departmentId != null">
        DEPARTMENT_ID,
      </if>
      <if test="userroleId != null">
        USERROLE_ID,
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID,
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER,
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME,
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX,
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL,
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE,
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS,
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY,
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER,
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE,
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE,
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        #{employeePassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.employeeId != null">
        EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.userroleId != null">
        USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      </if>
      <if test="record.nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null">
        EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null">
        EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeSex != null">
        EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      </if>
      <if test="record.employeeEmail != null">
        EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null">
        EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeAddress != null">
        EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeState != null">
        EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      </if>
      <if test="record.employeePassword != null">
        EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.noomn.dao.Employee">
    update employee
    <set>
      <if test="departmentId != null">
        DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.noomn.dao.Employee">
    update employee
    set DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR}
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="cn.com.noomn.dao.Employee">
    <id column="EMPLOYEE_ID" jdbcType="VARCHAR" property="employeeId" />
    <result column="DEPARTMENT_ID" jdbcType="VARCHAR" property="departmentId" />
    <result column="USERROLE_ID" jdbcType="VARCHAR" property="userroleId" />
    <result column="NEXT_DEP_DEPARTMENT_ID" jdbcType="VARCHAR" property="nextDepDepartmentId" />
    <result column="EMPLOYEE_NUMBER" jdbcType="VARCHAR" property="employeeNumber" />
    <result column="EMPLOYEE_NAME" jdbcType="VARCHAR" property="employeeName" />
    <result column="EMPLOYEE_SEX" jdbcType="CHAR" property="employeeSex" />
    <result column="EMPLOYEE_EMAIL" jdbcType="VARCHAR" property="employeeEmail" />
    <result column="EMPLOYEE_PHONE" jdbcType="VARCHAR" property="employeePhone" />
    <result column="EMPLOYEE_ADDRESS" jdbcType="VARCHAR" property="employeeAddress" />
    <result column="EMPLOYEE_BIRTHDAY" jdbcType="TIMESTAMP" property="employeeBirthday" />
    <result column="EMPLOYEE_IDNUMBER" jdbcType="VARCHAR" property="employeeIdnumber" />
    <result column="EMPLOYEE_ENTRYDATE" jdbcType="TIMESTAMP" property="employeeEntrydate" />
    <result column="EMPLOYEE_STATE" jdbcType="CHAR" property="employeeState" />
    <result column="EMPLOYEE_PASSWORD" jdbcType="VARCHAR" property="employeePassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, 
    EMPLOYEE_NAME, EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, 
    EMPLOYEE_IDNUMBER, EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
  </sql>
  <select id="selectByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employee
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.noomn.dao.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.noomn.dao.Employee">
    insert into employee (EMPLOYEE_ID, DEPARTMENT_ID, USERROLE_ID, 
      NEXT_DEP_DEPARTMENT_ID, EMPLOYEE_NUMBER, EMPLOYEE_NAME, 
      EMPLOYEE_SEX, EMPLOYEE_EMAIL, EMPLOYEE_PHONE, 
      EMPLOYEE_ADDRESS, EMPLOYEE_BIRTHDAY, EMPLOYEE_IDNUMBER, 
      EMPLOYEE_ENTRYDATE, EMPLOYEE_STATE, EMPLOYEE_PASSWORD
      )
    values (#{employeeId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{userroleId,jdbcType=VARCHAR}, 
      #{nextDepDepartmentId,jdbcType=VARCHAR}, #{employeeNumber,jdbcType=VARCHAR}, #{employeeName,jdbcType=VARCHAR}, 
      #{employeeSex,jdbcType=CHAR}, #{employeeEmail,jdbcType=VARCHAR}, #{employeePhone,jdbcType=VARCHAR}, 
      #{employeeAddress,jdbcType=VARCHAR}, #{employeeBirthday,jdbcType=TIMESTAMP}, #{employeeIdnumber,jdbcType=VARCHAR}, 
      #{employeeEntrydate,jdbcType=TIMESTAMP}, #{employeeState,jdbcType=CHAR}, #{employeePassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.noomn.dao.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        EMPLOYEE_ID,
      </if>
      <if test="departmentId != null">
        DEPARTMENT_ID,
      </if>
      <if test="userroleId != null">
        USERROLE_ID,
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID,
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER,
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME,
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX,
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL,
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE,
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS,
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY,
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER,
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE,
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE,
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        #{employeePassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.noomn.dao.EmployeeExample" resultType="java.lang.Integer">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.employeeId != null">
        EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.userroleId != null">
        USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      </if>
      <if test="record.nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeNumber != null">
        EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null">
        EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeSex != null">
        EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      </if>
      <if test="record.employeeEmail != null">
        EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.employeePhone != null">
        EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeAddress != null">
        EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.employeeState != null">
        EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      </if>
      <if test="record.employeePassword != null">
        EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set EMPLOYEE_ID = #{record.employeeId,jdbcType=VARCHAR},
      DEPARTMENT_ID = #{record.departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{record.userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{record.nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{record.employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{record.employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{record.employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{record.employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{record.employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{record.employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{record.employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{record.employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{record.employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{record.employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{record.employeePassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.noomn.dao.Employee">
    update employee
    <set>
      <if test="departmentId != null">
        DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="userroleId != null">
        USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      </if>
      <if test="nextDepDepartmentId != null">
        NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="employeeNumber != null">
        EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null">
        EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      </if>
      <if test="employeeEmail != null">
        EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeePhone != null">
        EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeBirthday != null">
        EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeIdnumber != null">
        EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      </if>
      <if test="employeeEntrydate != null">
        EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      </if>
      <if test="employeeState != null">
        EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      </if>
      <if test="employeePassword != null">
        EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR},
      </if>
    </set>
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.noomn.dao.Employee">
    update employee
    set DEPARTMENT_ID = #{departmentId,jdbcType=VARCHAR},
      USERROLE_ID = #{userroleId,jdbcType=VARCHAR},
      NEXT_DEP_DEPARTMENT_ID = #{nextDepDepartmentId,jdbcType=VARCHAR},
      EMPLOYEE_NUMBER = #{employeeNumber,jdbcType=VARCHAR},
      EMPLOYEE_NAME = #{employeeName,jdbcType=VARCHAR},
      EMPLOYEE_SEX = #{employeeSex,jdbcType=CHAR},
      EMPLOYEE_EMAIL = #{employeeEmail,jdbcType=VARCHAR},
      EMPLOYEE_PHONE = #{employeePhone,jdbcType=VARCHAR},
      EMPLOYEE_ADDRESS = #{employeeAddress,jdbcType=VARCHAR},
      EMPLOYEE_BIRTHDAY = #{employeeBirthday,jdbcType=TIMESTAMP},
      EMPLOYEE_IDNUMBER = #{employeeIdnumber,jdbcType=VARCHAR},
      EMPLOYEE_ENTRYDATE = #{employeeEntrydate,jdbcType=TIMESTAMP},
      EMPLOYEE_STATE = #{employeeState,jdbcType=CHAR},
      EMPLOYEE_PASSWORD = #{employeePassword,jdbcType=VARCHAR}
    where EMPLOYEE_ID = #{employeeId,jdbcType=VARCHAR}
  </update>
</mapper>